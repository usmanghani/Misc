PROCEDURE ERRORHANDLER
DO INFO WITH "Error: "+MESSAGE()+CHR(13)+"Error No: "+ALLTRIM(STR(ERROR()))+CHR(13)+"Line No: "+ALLTRIM(STR(LINENO())), "ERROR MESSAGE", "O", "STOP"

PROCEDURE BACKUP
sure='y'
STORE SPACE(50) TO PATH
@ 15,10 SAY "ENTER THE PATH AND FILE NAME TO STORE BACKUP FILES: ";
FONT "ARIAL",12 STYLE "BT"
@ 17,10 GET PATH;
FONT "ARIAL",12 STYLE "b" FUNCTION "!k"
Read
CLOS ALL
Clear
WAIT WINDOW "For this operation you should have Directory which you have specified" timeout 2
@ 20,20 say "Are you sure you have specified directory [Y   N]: " font "arial",12 style "bt" color r
@ 20,70 get sure func "!" font "arial",12 style "bt" color r
READ
IF upper(SURE)='Y'
!pkzip -a -SHIJAZ &path *.dbf *.CDX
CLEAR
WAIT WINDOW "Your Backup has been created at location "+PATH TIMEOUT 3
ELSE
WAIT WINDOW "You must create specified directory" TIMEOUT 2
CLEAR
ENDIF
RETURN

PROCEDURE RESTORE
sure='y'
STORE SPACE(50) TO PATH
@ 15,10 SAY "ENTER THE PATH AND FILE NAME TO RESTORE BACKUP FILES: ";
FONT "ARIAL",12 STYLE "BT"
@ 17,10 GET PATH;
FONT "ARIAL",12 STYLE "b" FUNCTION "!k"
Read
!pkunzip -S &PATH
WAIT WINDOW "Your Backup has been restored from location "+PATH TIMEOUT 3
CLEAR
RETURN

PROCEDURE EXITBACKUP
CLEAR
YN = INFO("Do You Want to create Backup Before exiting. Recommended [Y]", ;
          "ASK User", ;
          "YN", ;
          "Question")
IF UPPER(YN)="YES"
SET CENTURY OFF
SET MARK TO '-'
path=ALLTRIM(SYS(5)+SYS(2003)+"\backup\"+dtoc(date()))
!pkzip -a -SHIJAZ &path *.dbf *.CDX
DO INFO WITH "Backup has been created", "Backup Created", "O", "Info"
QUIT
ELSE
QUIT
ENDIF

PROCEDURE DELBACKUP
CLEAR
SET CENTURY OFF
path=ALLTRIM( SYS(5)+SYS(2003)+"\backup\D_"+ALLTRIM(STR(DAY(DATE())))+"-"+ALLTRIM(STR(MONTH(DATE()))) )
!pkzip -a -SHIJAZ &path *.dbf *.CDX
SET MARK TO
RETURN

PROCEDURE REFRESH2
CLOS ALL
CLEAR
DEAC WIND ALL
RELE WIND ALL

USE STUDENT ORDER TAG CODE
REINDEX
CLOS ALL
USE STUDENT ORDER TAG NAME
REINDEX
CLOS ALL

USE DEPT ORDER TAG CODE
REINDEX
CLOS ALL

USE CLASS ORDER TAG CODE
REINDEX
CLOS ALL
USE CLASS ORDER TAG DCODE
REINDEX
CLOS ALL

USE PREV ORDER TAG NAME
REINDEX
CLOS ALL

USE SUBJECT ORDER TAG CODE
REINDEX
CLOS ALL

USE FEE ORDER TAG CODE
REINDEX
CLOS ALL
USE FEE ORDER TAG RECNO
REINDEX
CLOS ALL

USE A_FEE ORDER TAG CODE
REINDEX
CLOS ALL
USE A_FEE ORDER TAG RECNO
REINDEX
CLOS ALL

USE Y_FEE ORDER TAG CODE
REINDEX
CLOS ALL
USE Y_FEE ORDER TAG RECNO
REINDEX
CLOS ALL

USE N_FEE ORDER TAG CODE
REINDEX
CLOS ALL
USE N_FEE ORDER TAG RECNO
REINDEX
CLOS ALL

USE P_FEE ORDER TAG CODE
REINDEX
CLOS ALL
USE P_FEE ORDER TAG RECNO
REINDEX
CLOS ALL

USE O_FEE ORDER TAG CODE
REINDEX
CLOS ALL
USE O_FEE ORDER TAG RECNO
REINDEX
CLOS ALL

USE MSTEACH ORDER TAG CODE
REINDEX
CLOS ALL

USE MSLOAN ORDER TAG CODE
REINDEX
CLOS ALL
USE MSLOAN ORDER TAG RECNO
REINDEX
CLOS ALL

USE MSPAY ORDER TAG CODE
REINDEX
CLOS ALL
USE MSPAY ORDER TAG RECNO
REINDEX
CLOS ALL

USE CCTEACH ORDER TAG CODE
REINDEX
CLOS ALL

USE CCLOAN ORDER TAG CODE
REINDEX
CLOS ALL
USE MSLOAN ORDER TAG RECNO
REINDEX
CLOS ALL

USE CCPAY ORDER TAG CODE
REINDEX
CLOS ALL
USE MSPAY ORDER TAG RECNO
REINDEX
CLOS ALL


DO INFO WITH "All The Indexes Are Refreshed and Updated...", "Refreshing Indexes", "O", "Info"
RETURN


PROCEDURE REFRESH
CLOS ALL
CLEAR
DEAC WIND ALL
RELE WIND ALL

USE STUDENT
DELETE TAG ALL OF STUDENT
INDEX ON CODE TAG CODE OF STUDENT
INDEX ON NAME TAG NAME OF STUDENT
CLOS ALL

USE DEPT
DELETE TAG ALL OF DEPT
INDEX ON CODE TAG CODE OF DEPT
CLOS ALL

USE CLASS
DELETE TAG ALL OF CLASS
INDEX ON CODE TAG CODE OF CLASS
INDEX ON DCODE TAG DCODE OF CLASS
CLOS ALL

USE PREV
DELETE TAG ALL OF PREV
INDEX ON NAME TAG NAME OF PREV
CLOS ALL

USE SUBJECT
DELETE TAG ALL OF SUBJECT
INDEX ON CODE TAG CODE OF SUBJECT
CLOS ALL

USE FEE
DELETE TAG ALL OF FEE
INDEX ON CODE TAG CODE OF FEE
INDEX ON RECNO TAG RECNO OF FEE
CLOS ALL

USE A_FEE
DELETE TAG ALL OF A_FEE
INDEX ON CODE TAG CODE OF A_FEE
INDEX ON RECNO TAG RECNO OF A_FEE
CLOS ALL

USE Y_FEE
DELETE TAG ALL OF Y_FEE
INDEX ON CODE TAG CODE OF Y_FEE
INDEX ON RECNO TAG RECNO OF Y_FEE
CLOS ALL

USE N_FEE
DELETE TAG ALL OF N_FEE
INDEX ON CODE TAG CODE OF N_FEE
INDEX ON RECNO TAG RECNO OF N_FEE
CLOS ALL

USE P_FEE
DELETE TAG ALL OF P_FEE
INDEX ON CODE TAG CODE OF P_FEE
INDEX ON RECNO TAG RECNO OF P_FEE
CLOS ALL

USE O_FEE
DELETE TAG ALL OF O_FEE
INDEX ON CODE TAG CODE OF O_FEE
INDEX ON RECNO TAG RECNO OF O_FEE
CLOS ALL

USE MSTEACH
DELETE TAG ALL OF MSTEACH
INDEX ON CODE TAG CODE OF MSTEACH
CLOS ALL

USE MSLOAN
DELETE TAG ALL OF MSLOAN
INDEX ON CODE TAG CODE OF MSLOAN
INDEX ON RECNO TAG RECNO OF MSLOAN
CLOS ALL

USE MSPAY
DELETE TAG ALL OF MSPAY
INDEX ON CODE TAG CODE OF MSPAY
INDEX ON RECNO TAG RECNO OF MSPAY
CLOS ALL

USE CCTEACH
DELETE TAG ALL OF CCTEACH
INDEX ON CODE TAG CODE OF CCTEACH
CLOS ALL

USE CCLOAN
DELETE TAG ALL OF CCLOAN
INDEX ON CODE TAG CODE OF CCLOAN
INDEX ON RECNO TAG RECNO OF CCLOAN
CLOS ALL

USE MSPAY
DELETE TAG ALL OF CCPAY
INDEX ON CODE TAG CODE OF CCPAY
INDEX ON RECNO TAG RECNO OF CCPAY
CLOS ALL


DO REFRESH2 IN UTILITY
RETURN


PROCEDURE SETLOGOFF
RESTORE FROM TEMP
USE LOG
GOTO ACNO
REPLACE LOGOFFTIME WITH TIME() FOR ACCES_NO=ACNO
RETURN

PROCEDURE encode
PARAMETER chrval, encdec, mval
PRIVATE chrval, encdec, chrlen, newval, CHRCNT, mval, s
chrlen = LEN(chrval)
CHRCNT = 1
newval = ''
DO WHILE CHRCNT<=chrlen
    IF encdec='E'
        newval = newval+CHR(ASC(SUBSTR(chrval,CHRCNT,1))+mval)
    ELSE
        newval = newval+CHR(ASC(SUBSTR(chrval,CHRCNT,1))-mval)
    ENDIF
    CHRCNT = CHRCNT+1
ENDDO
SAVE TO TEMP ALL EXCEPT CHR*
RETURN

PROCEDURE GETOUT
CLEAR
CLOS DATABASE
CLEAR MEMORY
CLEAR GETS
CLEAR READ ALL
CLEAR TYPEAHEAD
CLEAR WINDOW
CLEAR
ON KEY
RETURN TO MENU.PRG
