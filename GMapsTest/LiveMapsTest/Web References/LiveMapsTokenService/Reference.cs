//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace LiveMapsTest.LiveMapsTokenService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommonServiceSoap", Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CommonService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CustomerInfoHeader customerInfoHeaderValueField;
        
        private UserInfoHeader userInfoHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetVersionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryRegionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSourceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGreatCircleDistancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientTokenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CommonService() {
            this.Url = global::LiveMapsTest.Properties.Settings.Default.LiveMapsTest_LiveMapsTokenService_CommonService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public CustomerInfoHeader CustomerInfoHeaderValue {
            get {
                return this.customerInfoHeaderValueField;
            }
            set {
                this.customerInfoHeaderValueField = value;
            }
        }
        
        public UserInfoHeader UserInfoHeaderValue {
            get {
                return this.userInfoHeaderValueField;
            }
            set {
                this.userInfoHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVersionInfoCompletedEventHandler GetVersionInfoCompleted;
        
        /// <remarks/>
        public event GetCountryRegionInfoCompletedEventHandler GetCountryRegionInfoCompleted;
        
        /// <remarks/>
        public event GetEntityTypesCompletedEventHandler GetEntityTypesCompleted;
        
        /// <remarks/>
        public event GetDataSourceInfoCompletedEventHandler GetDataSourceInfoCompleted;
        
        /// <remarks/>
        public event GetGreatCircleDistancesCompletedEventHandler GetGreatCircleDistancesCompleted;
        
        /// <remarks/>
        public event GetClientTokenCompletedEventHandler GetClientTokenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetVersionInfo", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VersionInfo[] GetVersionInfo() {
            object[] results = this.Invoke("GetVersionInfo", new object[0]);
            return ((VersionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionInfoAsync() {
            this.GetVersionInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionInfoAsync(object userState) {
            if ((this.GetVersionInfoOperationCompleted == null)) {
                this.GetVersionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionInfoOperationCompleted);
            }
            this.InvokeAsync("GetVersionInfo", new object[0], this.GetVersionInfoOperationCompleted, userState);
        }
        
        private void OnGetVersionInfoOperationCompleted(object arg) {
            if ((this.GetVersionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionInfoCompleted(this, new GetVersionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetCountryRegionInfo", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionInfo[] GetCountryRegionInfo(int[] entityIDs) {
            object[] results = this.Invoke("GetCountryRegionInfo", new object[] {
                        entityIDs});
            return ((CountryRegionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryRegionInfoAsync(int[] entityIDs) {
            this.GetCountryRegionInfoAsync(entityIDs, null);
        }
        
        /// <remarks/>
        public void GetCountryRegionInfoAsync(int[] entityIDs, object userState) {
            if ((this.GetCountryRegionInfoOperationCompleted == null)) {
                this.GetCountryRegionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryRegionInfoOperationCompleted);
            }
            this.InvokeAsync("GetCountryRegionInfo", new object[] {
                        entityIDs}, this.GetCountryRegionInfoOperationCompleted, userState);
        }
        
        private void OnGetCountryRegionInfoOperationCompleted(object arg) {
            if ((this.GetCountryRegionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryRegionInfoCompleted(this, new GetCountryRegionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetEntityTypes", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityType[] GetEntityTypes(string dataSourceName) {
            object[] results = this.Invoke("GetEntityTypes", new object[] {
                        dataSourceName});
            return ((EntityType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityTypesAsync(string dataSourceName) {
            this.GetEntityTypesAsync(dataSourceName, null);
        }
        
        /// <remarks/>
        public void GetEntityTypesAsync(string dataSourceName, object userState) {
            if ((this.GetEntityTypesOperationCompleted == null)) {
                this.GetEntityTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityTypesOperationCompleted);
            }
            this.InvokeAsync("GetEntityTypes", new object[] {
                        dataSourceName}, this.GetEntityTypesOperationCompleted, userState);
        }
        
        private void OnGetEntityTypesOperationCompleted(object arg) {
            if ((this.GetEntityTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityTypesCompleted(this, new GetEntityTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetDataSourceInfo", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSource[] GetDataSourceInfo(string[] dataSourceNames) {
            object[] results = this.Invoke("GetDataSourceInfo", new object[] {
                        dataSourceNames});
            return ((DataSource[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSourceInfoAsync(string[] dataSourceNames) {
            this.GetDataSourceInfoAsync(dataSourceNames, null);
        }
        
        /// <remarks/>
        public void GetDataSourceInfoAsync(string[] dataSourceNames, object userState) {
            if ((this.GetDataSourceInfoOperationCompleted == null)) {
                this.GetDataSourceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSourceInfoOperationCompleted);
            }
            this.InvokeAsync("GetDataSourceInfo", new object[] {
                        dataSourceNames}, this.GetDataSourceInfoOperationCompleted, userState);
        }
        
        private void OnGetDataSourceInfoOperationCompleted(object arg) {
            if ((this.GetDataSourceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSourceInfoCompleted(this, new GetDataSourceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetGreatCircleDistances", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double[] GetGreatCircleDistances(LatLong[] latLongs) {
            object[] results = this.Invoke("GetGreatCircleDistances", new object[] {
                        latLongs});
            return ((double[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGreatCircleDistancesAsync(LatLong[] latLongs) {
            this.GetGreatCircleDistancesAsync(latLongs, null);
        }
        
        /// <remarks/>
        public void GetGreatCircleDistancesAsync(LatLong[] latLongs, object userState) {
            if ((this.GetGreatCircleDistancesOperationCompleted == null)) {
                this.GetGreatCircleDistancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGreatCircleDistancesOperationCompleted);
            }
            this.InvokeAsync("GetGreatCircleDistances", new object[] {
                        latLongs}, this.GetGreatCircleDistancesOperationCompleted, userState);
        }
        
        private void OnGetGreatCircleDistancesOperationCompleted(object arg) {
            if ((this.GetGreatCircleDistancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGreatCircleDistancesCompleted(this, new GetGreatCircleDistancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserInfoHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://s.mappoint.net/mappoint-30/GetClientToken", RequestNamespace="http://s.mappoint.net/mappoint-30/", ResponseNamespace="http://s.mappoint.net/mappoint-30/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClientToken(TokenSpecification specification) {
            object[] results = this.Invoke("GetClientToken", new object[] {
                        specification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientTokenAsync(TokenSpecification specification) {
            this.GetClientTokenAsync(specification, null);
        }
        
        /// <remarks/>
        public void GetClientTokenAsync(TokenSpecification specification, object userState) {
            if ((this.GetClientTokenOperationCompleted == null)) {
                this.GetClientTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientTokenOperationCompleted);
            }
            this.InvokeAsync("GetClientToken", new object[] {
                        specification}, this.GetClientTokenOperationCompleted, userState);
        }
        
        private void OnGetClientTokenOperationCompleted(object arg) {
            if ((this.GetClientTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientTokenCompleted(this, new GetClientTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class CustomerInfoHeader : System.Web.Services.Protocols.SoapHeader {
        
        private short customLogEntryField;
        
        /// <remarks/>
        public short CustomLogEntry {
            get {
                return this.customLogEntryField;
            }
            set {
                this.customLogEntryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class TokenSpecification {
        
        private string clientIPAddressField;
        
        private int tokenValidityDurationMinutesField;
        
        /// <remarks/>
        public string ClientIPAddress {
            get {
                return this.clientIPAddressField;
            }
            set {
                this.clientIPAddressField = value;
            }
        }
        
        /// <remarks/>
        public int TokenValidityDurationMinutes {
            get {
                return this.tokenValidityDurationMinutesField;
            }
            set {
                this.tokenValidityDurationMinutesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class DataSource {
        
        private string nameField;
        
        private string versionField;
        
        private string descriptionField;
        
        private DataSourceCapability capabilityField;
        
        private int[] entityExtentField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public DataSourceCapability Capability {
            get {
                return this.capabilityField;
            }
            set {
                this.capabilityField = value;
            }
        }
        
        /// <remarks/>
        public int[] EntityExtent {
            get {
                return this.entityExtentField;
            }
            set {
                this.entityExtentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DataSourceCapability {
        
        /// <remarks/>
        CanDrawMaps = 1,
        
        /// <remarks/>
        CanFindPlaces = 2,
        
        /// <remarks/>
        CanFindNearby = 4,
        
        /// <remarks/>
        CanRoute = 8,
        
        /// <remarks/>
        CanFindAddress = 16,
        
        /// <remarks/>
        HasIcons = 32,
        
        /// <remarks/>
        DataServiceQuery = 64,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityProperty {
        
        private string nameField;
        
        private string displayNameField;
        
        private string dataTypeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityType {
        
        private string nameField;
        
        private string displayNameField;
        
        private string parentNameField;
        
        private string definitionField;
        
        private EntityProperty[] propertiesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
            }
        }
        
        /// <remarks/>
        public string Definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityProperty[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLong {
        
        private double latitudeField;
        
        private double longitudeField;
        
        public LatLong() {
            this.latitudeField = 0;
            this.longitudeField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionInfo {
        
        private int entityIDField;
        
        private LatLong latLongField;
        
        private string iso2Field;
        
        private string iso3Field;
        
        private string friendlyNameField;
        
        private string officialNameField;
        
        /// <remarks/>
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
            }
        }
        
        /// <remarks/>
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
            }
        }
        
        /// <remarks/>
        public string Iso3 {
            get {
                return this.iso3Field;
            }
            set {
                this.iso3Field = value;
            }
        }
        
        /// <remarks/>
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
            }
        }
        
        /// <remarks/>
        public string OfficialName {
            get {
                return this.officialNameField;
            }
            set {
                this.officialNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class VersionInfo {
        
        private string componentField;
        
        private string versionField;
        
        /// <remarks/>
        public string Component {
            get {
                return this.componentField;
            }
            set {
                this.componentField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionContext {
        
        private int entityIDField;
        
        private string iso2Field;
        
        public CountryRegionContext() {
            this.entityIDField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
            }
        }
        
        /// <remarks/>
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CultureInfo {
        
        private string nameField;
        
        private int lcidField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Lcid {
            get {
                return this.lcidField;
            }
            set {
                this.lcidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://s.mappoint.net/mappoint-30/", IsNullable=false)]
    public partial class UserInfoHeader : System.Web.Services.Protocols.SoapHeader {
        
        private CultureInfo cultureField;
        
        private DistanceUnit defaultDistanceUnitField;
        
        private CountryRegionContext contextField;
        
        /// <remarks/>
        public CultureInfo Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public DistanceUnit DefaultDistanceUnit {
            get {
                return this.defaultDistanceUnitField;
            }
            set {
                this.defaultDistanceUnitField = value;
            }
        }
        
        /// <remarks/>
        public CountryRegionContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DistanceUnit {
        
        /// <remarks/>
        Kilometer,
        
        /// <remarks/>
        Mile,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetVersionInfoCompletedEventHandler(object sender, GetVersionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VersionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VersionInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCountryRegionInfoCompletedEventHandler(object sender, GetCountryRegionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryRegionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryRegionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetEntityTypesCompletedEventHandler(object sender, GetEntityTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDataSourceInfoCompletedEventHandler(object sender, GetDataSourceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSourceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSourceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSource[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSource[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetGreatCircleDistancesCompletedEventHandler(object sender, GetGreatCircleDistancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGreatCircleDistancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGreatCircleDistancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetClientTokenCompletedEventHandler(object sender, GetClientTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591